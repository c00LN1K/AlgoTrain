# пусть надо найти k-тый элемент
# с помощью бинарного поиска найти нужную диагональ
# (номер последнего элемента n-ой диагонали == арифметической прогрессии для n-ого элемента)
# причем в данной диагонали ровно n элементов и последний равен 1/n
# значит ответом будет - 1 + Sn - k / n - Sn + k для четных диагоналей и наоборот для нечетных
# так как у четных диагоналей последний элемент последовательности находится справа, а у нечетных - слева
# поэтому в конце и будет искаться по разному смещение


n = int(input())
left, right = 1, n
while left < right:
    mid = (left + right) // 2
    s = (1 + mid) * mid // 2
    if n <= s:
        right = mid
    else:
        left = mid + 1

s = (1 + left) * left // 2
if left % 2 == 0:
    print(f'{s - n + 1}/{left - s + n}')
else:
    print(f'{left - s + n}/{s - n + 1}')
